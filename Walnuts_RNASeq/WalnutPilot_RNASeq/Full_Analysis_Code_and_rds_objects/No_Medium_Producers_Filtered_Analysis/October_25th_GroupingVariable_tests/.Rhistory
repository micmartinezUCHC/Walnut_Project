y = 'pvalue')
EnhancedVolcano(lowResults,
lab = lowResultsCommon$Symbols,
title = "Distal Low vs Proximal Low",
subtitle = "",
legendPosition = "bottom",
x = 'log2FoldChange',
y = 'pvalue')
EnhancedVolcano(lowGroups,
lab = lowResultsCommon$Symbols,
title = "Distal Low vs Proximal Low",
subtitle = "",
legendPosition = "bottom",
x = 'log2FoldChange',
y = 'pvalue')
EnhancedVolcano(lowGroups,
lab = lowGroups$Symbols,
title = "Distal Low vs Proximal Low",
subtitle = "",
legendPosition = "bottom",
x = 'log2FoldChange',
y = 'pvalue')
EnhancedVolcano(highGroups,
lab = highGroups$Symbols,
title = "Distal High vs Proximal High",
subtitle = "",
legendPosition = "bottom",
x = 'log2FoldChange',
y = 'pvalue')
ORAgoCNET <- cnetplot(cr, showCategory = "steroid dehydrogenase activity")
ORAgoCNET
?cnetplot
ORAgoCNET <- cnetplot(cr)
ORAgoCNET
?cnetplot
ORAgoCNET <- cnetplot(cr, foldChange = GeneLists)
ORAgoCNET <- cnetplot(cr, foldChange = name(GeneLists))
ORAgoCNET <- cnetplot(cr, foldChange = names(GeneLists))
ORAgoCNET <- cnetplot(cr, foldChange = names(lowCP))
ORAgoCNET <- cnetplot(cr, node_label = "gene")
ORAgoCNET
ORAgoCNET <- cnetplot(cr, node_label = "all")
ORAgoCNET
ORAgoCNET <- cnetplot(cr, node_label = "all", cex_label_category = 0.5, cex_label_gene = 1)
ORAgoCNET
ORAgoCNET <- cnetplot(cr, node_label = "all", cex_label_category = 1, cex_label_gene = 1.5)
ORAgoCNET
FC <- rbind(lowCP, highCP)
FC
ORAgoCNET <- cnetplot(cr, foldChange = FC, node_label = "all", cex_label_category = 1, cex_label_gene = 1.5)
ORAgoCNET
ORAgoCNET <- cnetplot(cr, foldChange = FC, node_label = "all", cex_label_category = 1, cex_label_gene = 1.5,
showCategory = "organic acid binding")
ORAgoCNET
ORAgoCNET <- cnetplot(cr, foldChange = FC, node_label = "all", cex_label_category = 1, cex_label_gene = 1.5,
showCategory = "GO:0043177")
ORAgoCNET
ORAgoCNET <- cnetplot(cr, foldChange = FC, node_label = "all", cex_label_category = 1, cex_label_gene = 1.5,
showCategory = 10)
ORAgoCNET
ORAgoCNET <- cnetplot(cr, foldChange = FC, node_label = "all", cex_label_category = 1, cex_label_gene = 1.5,
showCategory = 10, circular = TRUE)
ORAgoCNET
ORAgoCNET <- cnetplot(cr, foldChange = FC, node_label = "all", cex_label_category = 1, cex_label_gene = 1.5,
showCategory = 10, circular = FALSE)
organicAcidBinding <- c("CYP2W1", "GLRA2", "GLUL", "GLUD1", "UGT1A8", "PCCA", "PHYH", "OTC", "FABP3", "TAT",
"NR1H4", "GRIN2D", "CYP26B1")
organicAcidResults <- highGroup[highGroup$Symbols %in% organicAcidBinding]
organicAcidResults <- highGroups[highGroups$Symbols %in% organicAcidBinding,]
View(organicAcidResults)
View(highGroups)
organicAcidBinding <- c(" CYP2W1", " GLRA2", " GLUL", " GLUD1", " UGT1A8", " PCCA", " PHYH", " OTC", " FABP3", " TAT",
" NR1H4", " GRIN2D", " CYP26B1")
organicAcidResults <- highGroups[highGroups$Symbols %in% organicAcidBinding,]
View(organicAcidResults)
EnhancedVolcano(organicAcidResults,
lab = organicAcidResults$Symbols,
title = "Organic Acid Binding Gene Intersection",
subtitle = "",
legendPosition = "bottom",
x = 'log2FoldChange',
y = 'pvalue')
?EnhancedVolcano
EnhancedVolcano(organicAcidResults,
lab = organicAcidResults$Symbols,
title = "Organic Acid Binding Gene Intersection",
subtitle = "",
pCutoff = 0.1,
legendPosition = "bottom",
x = 'log2FoldChange',
y = 'pvalue')
EnhancedVolcano(organicAcidResults,
lab = organicAcidResults$Symbols,
title = "Organic Acid Binding Gene Intersection",
subtitle = "",
pCutoff = 0.1,
FCcutoff = 0.1,
legendPosition = "bottom",
x = 'log2FoldChange',
y = 'pvalue')
PCA <- plotPCA(vsd, intgroup = "Group") +
geom_text_repel(aes(label = rownames(design)), size = 3, max.overlaps = Inf) +
ggtitle("Walnut by Grouping Variable, No Medium Producers") +
stat_ellipse(geom = "polygon", type = "norm", level = 0.90, alpha = 0.10, aes(fill = group)) +
theme_bw() +
theme(legend.position = "bottom")
PCA
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("GSVA")
library(GSVA)
m_t2gC2 <- msigdbr(species = "Homo sapiens", category = "C2") %>%
dplyr::select(gs_name, entrez_gene, gs_subcat) %>%
filter(gs_subcat %in% c("CP:BIOCARTA", "CP:KEGG", "CP:PID", "CP:REACTOME", "CP:WIKIPATHWAYS"))
m_t2gC5 <- msigdbr(species = "Homo sapiens", category = "C5") %>%
dplyr::select(gs_name, entrez_gene,  gs_subcat) %>%
filter(gs_subcat %in% c("GO", "GO:BP", "GO:CC", "GO:MF"))
#-----Combine into one large dataframe of gene sets
pathways <- rbind(m_t2gC2, m_t2gC5)
?gsvaParam
?gsva
set.seed(03061999)
gsva <- gsva(dds,
pathways,
kcdf = "Poisson",
ssgsea.norm = TRUE)
getEntrez <- function(degs) {
res.ordered <- degs
res.ordered$Ensembl <- gsub("^(.*?) - .*", "\\1", rownames(res.ordered))
res.ordered$Entrez <- mapIds(org.Hs.eg.db, key = res.ordered$Ensembl,
column = "ENTREZID", keytype = "ENSEMBL",
multiVals = "first")
res.ordered.genes <- res.ordered$log2FoldChange
#Assign Entrez IDs as names for the genes
names(res.ordered.genes) <- res.ordered$Entrez
#Remove duplicated Entrez IDs and their corresponding values
unique_entrez_genes <- names(res.ordered.genes[!duplicated(names(res.ordered.genes))])
unique_genes <- res.ordered.genes[unique_entrez_genes]
unique_genes <- sort(unique_genes, decreasing = TRUE)
return(unique_genes)
}
gsva <- gsva(highgsea,
pathways,
kcdf = "Poisson",
ssgsea.norm = TRUE)
gsva <- gsva(as.data.frame(highgsea),
pathways,
kcdf = "Poisson",
ssgsea.norm = TRUE)
gsva <- gsva(counts,
pathways,
kcdf = "Poisson",
ssgsea.norm = TRUE)
gsva <- gsva(dds,
pathways,
kcdf = "Poisson",
ssgsea.norm = TRUE)
pathways <- rbind(m_t2gC2, m_t2gC5)
pathways
View(pathways)
dds
rownames(dds)
dds
results <- as.data.frame(results(dds, normalized = TRUE))
results <- as.data.frame(results(dds))
View(getEntrez)
results$Ensembl <- gsub("^(.*?) - .*", "\\1", rownames(results))
results$Entrez <- mapIds(org.Hs.eg.db, key = results$Ensembl,
column = "ENTREZID", keytype = "ENSEMBL",
multiVals = "first")
rownames(results) <- results$Entrez
unique_entrez_genes <- names(results[!duplicated(results$Entrez)])
unique_entrez_genes <- names(results[!duplicated(results$Entrez),])
unique_genes <- results[unique_entrez_genes,]
rownames(results) <- results$Entrez
unique_genes <- results[results$Entrez %in% unique_entrez_genes,]
rownames(unique_genes) <- unique_genes$Entrez
gsva <- gsva(unique_genes,
pathways,
kcdf = "Poisson",
ssgsea.norm = TRUE)
results <- as.data.frame(results(dds))
results$Ensembl <- gsub("^(.*?) - .*", "\\1", rownames(results))
results$Entrez <- mapIds(org.Hs.eg.db, key = results$Ensembl,
column = "ENTREZID", keytype = "ENSEMBL",
multiVals = "first")
unique_entrez_genes <- names(results[!duplicated(results$Entrez),])
unique_genes <- results[results$Entrez %in% unique_entrez_genes,]
rownames(unique_genes) <- unique_genes$Entrez
results <- as.data.frame(results(dds))
results$Ensembl <- gsub("^(.*?) - .*", "\\1", rownames(results))
results$Entrez <- mapIds(org.Hs.eg.db, key = results$Ensembl,
column = "ENTREZID", keytype = "ENSEMBL",
multiVals = "first")
unique_entrez_genes <- results[!duplicated(results$Entrez),]
unique_genes <- results[results$Entrez %in% unique_entrez_genes,]
rownames(unique_genes) <- unique_genes$Entrez
unique_entrez_genes
unique_genes <- results[results$Entrez %in% unique_entrez_genes$Entrez,]
rownames(unique_genes) <- unique_genes$Entrez
entrezCol <- results$Entrez
unique <- !duplicated(etrezCol)
unique <- !duplicated(entrezCol)
rownames(results) <- unique
results <- results[!unique,]
rownames(results) <- results$Entrez
View(results)
entrezCol <- results$Entrez
unique <- duplicated(entrezCol)
results <- results[!unique,]
rownames(results) <- results$Entrez
entrezCol
results <- as.data.frame(results(dds))
results$Ensembl <- gsub("^(.*?) - .*", "\\1", rownames(results))
results$Entrez <- mapIds(org.Hs.eg.db, key = results$Ensembl,
column = "ENTREZID", keytype = "ENSEMBL",
multiVals = "first")
entrezCol <- results$Entrez
entrezCol
unique <- duplicated(entrezCol)
results <- results[!unique,]
rownames(results) <- results$Entrez
View(results)
results$Entrez <- NULL
gsva <- gsva(as.matrix(results),
pathways,
kcdf = "Poisson",
ssgsea.norm = TRUE)
results$Ensembl <- NULL
gsva <- gsva(as.matrix(results),
pathways,
kcdf = "Poisson",
ssgsea.norm = TRUE)
counts <- as.data.frame(counts(dds, normalized = TRUE))
results <- as.data.frame(results(dds))
results$gene <- rownames(results)
counts$Ensembl <- gsub("^(.*?) - .*", "\\1", rownames(counts)
counts$Ensembl <- gsub("^(.*?) - .*", "\\1", rownames(counts))
counts$Ensembl <- gsub("^(.*?) - .*", "\\1", rownames(counts))
counts$Entrez <- mapIds(org.Hs.eg.db, key = counts$Ensembl,
column = "ENTREZID", keytype = "ENSEMBL",
multiVals = "first")
entrezCol <- counts$Entrez
unique <- duplicated(entrezCol)
counts <- counts[!unique,]
rownames(counts) <- counts$Entrez
counts$Entrez <- NULL
counts$Ensembl <- NULL
gsva <- gsva(as.matrix(results),
pathways,
kcdf = "Poisson",
ssgsea.norm = TRUE)
gsva <- gsva(as.matrix(counts),
pathways,
kcdf = "Poisson",
ssgsea.norm = TRUE)
View(gsva)
gsva
gsva <- gsva(as.matrix(counts),
pathways,
kcdf = "Poisson")
View(counts)
gsva
pathways <- list(pathways)
gsva <- gsva(as.matrix(counts),
pathways,
kcdf = "Poisson")
m_t2gC5 <- msigdbr(species = "Homo sapiens", category = "C5")
GO_list <- split(m_t2gC5$entrez_gene,
m_t2gC5$gs_name)
GO_list
gsva <- gsva(as.matrix(counts),
GO_list,
kcdf = "Poisson")
gsva
gsva_results <- as.data.frame(gsva)
View(gsva_results)
View(Group)
pheatmap(gsva_results,
annotation_col = Group,
scale = "row",
show_rownames = FALSE)
View(gsva_results)
results <- as.data.frame(results(dds, contrast = c("Group", "Distal_Low", "Proximal_Low")))
results$gene <- rownames(results)
counts <- as.data.frame(counts(dds, normalized = TRUE))
counts$Ensembl <- gsub("^(.*?) - .*", "\\1", rownames(counts))
counts$Entrez <- mapIds(org.Hs.eg.db, key = counts$Ensembl,
column = "ENTREZID", keytype = "ENSEMBL",
multiVals = "first")
entrezCol <- counts$Entrez
unique <- duplicated(entrezCol)
counts <- counts[!unique,]
rownames(counts) <- counts$Entrez
counts$Entrez <- NULL
counts$Ensembl <- NULL
m_t2gC5 <- msigdbr(species = "Homo sapiens", category = "C2")
GO_list <- split(m_t2gC5$entrez_gene,
m_t2gC5$gs_name)
gsva <- gsva(as.matrix(counts),
GO_list,
kcdf = "Poisson",
min.sz = 1,
max.sz = 500)
m_t2gC5 <- msigdbr(species = "Homo sapiens", category = "C2") %>%
filter(gs_subcat %in% c("CP:BIOCARTA", "CP:KEGG", "CP:PID", "CP:REACTOME", "CP:WIKIPATHWAYS"))
GO_list <- split(m_t2gC5$entrez_gene,
m_t2gC5$gs_name)
gsva <- gsva(as.matrix(counts),
GO_list,
kcdf = "Poisson",
min.sz = 1,
max.sz = 500)
gsva_results <- as.data.frame(gsva)
pheatmap(gsva_results,
annotation_col = Group,
scale = "row",
show_rownames = FALSE)
pheatmap(gsva_results,
annotation_col = Group,
cluster_cols = FALSE,
scale = "row",
show_rownames = FALSE)
Group$Group <- arrange(Group$Group)
pheatmap(gsva_results,
annotation_col = Group,
cluster_cols = TRUE,
scale = "row",
show_rownames = FALSE)
View(gsva_results)
gsea_results$Desc <- rownames(gsva_results)
gsva_results$Desc <- rownames(gsva_results)
search_term <- "Estrogen"
matching_rows <- grep(search_term, gsva_results$Desc, ignore.case = TRUE)
gsva_resultsEstrogen <- gsva_estrogen[matching_rows,]
gsva_resultsEstrogen <- gsva_results[matching_rows,]
gsva_resultsEstrogen$Desc <- NULL
pheatmap(gsva_resultsEstrogen,
annotation_col = Group,
cluster_cols = TRUE,
scale = "row",
show_rownames = FALSE)
pheatmap(gsva_resultsEstrogen,
annotation_col = Group,
cluster_cols = TRUE,
scale = "row",
show_rownames = TRUE)
Group <- design$URoAClass
names(Group) <- design$Sample
Group <- as.data.frame(Group)
pheatmap(gsva_resultsEstrogen,
annotation_col = Group,
cluster_cols = TRUE,
scale = "row",
show_rownames = TRUE,
main = "GSVA Estrogen Terms")
Group$Location <- design$Location
pheatmap(gsva_resultsEstrogen,
annotation_col = Group,
cluster_cols = TRUE,
scale = "row",
show_rownames = TRUE,
main = "GSVA Estrogen Terms")
save(gsva, file = "C2_GSVA_Object.rds")
write.csv(gsva_results, file = "C2_gsva_results.csv")
View(Group)
Group <- Group %>%
arrange(URoAClass)
Group <- Group %>%
arrange(Group)
View(Group)
Group <- Group %>%
arrange(desc(Group))
sample_order <- rownames(Group)
gsva_results <- gsva_results[,sample_order]
pheatmap(gsva_resultsEstrogen,
annotation_col = Group,
cluster_cols = TRUE,
scale = "row",
show_rownames = TRUE,
main = "GSVA Estrogen Terms")
gsva_resultsEstrogen <- gsva_results[,sample_order]
pheatmap(gsva_resultsEstrogen,
annotation_col = Group,
cluster_cols = TRUE,
scale = "row",
show_rownames = TRUE,
main = "GSVA Estrogen Terms")
search_term <- "Estrogen"
matching_rows <- grep(search_term, gsva_results$Desc, ignore.case = TRUE)
gsva_resultsEstrogen <- gsva_results[matching_rows,]
gsva_resultsEstrogen$Desc <- NULL
gsva_resultsEstrogen <- gsva_resultsEstrogen[,sample_order]
pheatmap(gsva_resultsEstrogen,
annotation_col = Group,
cluster_cols = TRUE,
scale = "row",
show_rownames = TRUE,
main = "GSVA Estrogen Terms")
sample_order <- rownames(Group)
gsva_resultsEstrogen <- gsva_resultsEstrogen[,sample_order]
search_term <- "Estrogen"
gsva_results$Desc <- rownames(gsva_results)
search_term <- "Estrogen"
matching_rows <- grep(search_term, gsva_results$Desc, ignore.case = TRUE)
gsva_resultsEstrogen <- gsva_results[matching_rows,]
gsva_resultsEstrogen$Desc <- NULL
gsva_resultsEstrogen <- gsva_resultsEstrogen[,sample_order]
pheatmap(gsva_resultsEstrogen,
annotation_col = Group,
cluster_cols = TRUE,
scale = "row",
show_rownames = TRUE,
main = "GSVA Estrogen Terms")
pheatmap(gsva_resultsEstrogen,
annotation_col = Group,
cluster_cols = FALSE,
scale = "row",
show_rownames = TRUE,
main = "GSVA Estrogen Terms")
search_term <- "Fatty"
matching_rows <- grep(search_term, gsva_results$Desc, ignore.case = TRUE)
gsva_resultsFattyAcids <- gsva_results[matching_rows,]
gsva_resultsFattyAcids$Desc <- NULL
pheatmap(gsva_resultsFattyAcids,
annotation_col = Group,
cluster_cols = FALSE,
scale = "row",
show_rownames = TRUE,
main = "GSVA Fatty Acid Terms")
pheatmap(gsva_resultsFattyAcids[,1:11],
annotation_col = Group,
cluster_cols = FALSE,
scale = "row",
show_rownames = TRUE,
main = "GSVA Fatty Acid Terms")
pheatmap(gsva_resultsFattyAcids[1:11,],
annotation_col = Group,
cluster_cols = FALSE,
scale = "row",
show_rownames = TRUE,
main = "GSVA Fatty Acid Terms")
pheatmap(gsva_resultsFattyAcids[1:11,],
annotation_col = Group,
cluster_cols = FALSE,
scale = "column",
show_rownames = TRUE,
main = "GSVA Fatty Acid Terms")
pheatmap(gsva_resultsFattyAcids[1:11,],
annotation_col = Group,
cluster_cols = FALSE,
scale = "row",
show_rownames = TRUE,
main = "GSVA Fatty Acid Terms")
help(GSA)
help("gsva")
??GSVA
search_term <- "Microbial"
matching_rows <- grep(search_term, gsva_results$Desc, ignore.case = TRUE)
gsva_resultsMicrobial <- gsva_results[matching_rows,]
gsva_resultsMicrobial$Desc <- NULL
pheatmap(gsva_resultsMicrobial,
annotation_col = Group,
cluster_cols = FALSE,
scale = "row",
show_rownames = TRUE,
main = "GSVA Microbial Terms")
pheatmap(gsva_resultsMicrobial[1,],
annotation_col = Group,
cluster_cols = FALSE,
scale = "row",
show_rownames = TRUE,
main = "GSVA Microbial Terms")
pheatmap(gsva_resultsMicrobial[1,],
annotation_col = Group,
cluster_cols = FALSE,
cluster_rows = FALSE,
scale = "row",
show_rownames = TRUE,
main = "GSVA Microbial Terms")
gsva_results$Desc <- NULL
hist(gsea_results)
hist(gsva_results)
View(gsva_results)
hist(gsva_results)
hist(gsva_results[1,])
hist(as.numeric(gsva_results[1,])
)
hist(as.numeric(gsva_results[1:10,]))
hist(as.numeric(gsva_results[2,]))
hist(as.numeric(gsva_results[3,]))
hist(as.numeric(gsva_results[4,]))
?hist
hist(as.numeric(gsva_results[4,]), breaks = 10)
hist(as.numeric(gsva_results[1,]), breaks = 10)
hist(as.numeric(gsva_results[1,]), breaks = 20)
hist(as.numeric(gsva_results[2,]), breaks = 20)
hist(as.numeric(gsva_results[2,]), breaks = 50)
hist(as.numeric(gsva_results[2,]), breaks = 5)
hist(as.numeric(gsva_results[2,]), breaks = 3)
hist(as.numeric(gsva_results[3,]), breaks = 3)
hist(as.numeric(gsva_results[4,]), breaks = 3)
hist(as.numeric(gsva_results[200,]), breaks = 3)
collapsedGSVA <- c(gsva_results)
hist(collapsedGSVA)
hist(as.numeric(collapsedGSVA))
collapsedGSVA <- as.vector(gsva_results)
collapsedGSVA
hist(as.numeric(collapsedGSVA))
collapsedGSVA <- as.matrix(gsva_results)
collapsedGSVA <- c(collapsedGSVA)
hist(as.numeric(collapsedGSVA))
